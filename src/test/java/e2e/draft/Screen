    private File takeScreenshot(WebElement element){
        File tmp;
        if (element == null){
            tmp =((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            System.out.println("Take screenshot page");
        } else {
            tmp = element.getScreenshotAs(OutputType.FILE);
        System.out.println("take screenshot element");
        }

        return tmp;
    }

    protected void takeAndCompareScreenshot(String actualScreenshotName, WebElement element) throws IOException {
        String referenceImageFilePath = "reference/" + actualScreenshotName + ".png";
        String tmpFilePath = "reference/tmp_" + actualScreenshotName + ".png";
        File tmp = takeScreenshot(element);

        Files.copy(tmp.toPath(), new File(tmpFilePath).toPath(), StandardCopyOption.REPLACE_EXISTING);

        File referenceImageFile = new File(referenceImageFilePath);
        if (!referenceImageFile.exists()){
            throw new RuntimeException("Reference image file does not exist, but there is tmp file, need remote tmp_ from name file " + tmpFilePath);

        }

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = screenSize.width;
        int height = screenSize.height;

        double maxDiffPercent = 0.01 * width * height;

        ProcessBuilder pb = new ProcessBuilder("C:\\Program Files\\ImageMagick-7.1.1-Q16-HDRI\\magick.exe", "compare", "-metric", "AE", referenceImageFilePath, tmpFilePath, "null:");
        Process process = pb.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getErrorStream()));

        String line;
        double difference = 0;
        while ((line=reader.readLine()) != null){
            difference = Integer.parseInt(line.trim());
        }
        reader.close();
        process.destroy();

        if (difference > maxDiffPercent){
            throw new RuntimeException(referenceImageFilePath + " not aqual " + tmpFilePath + " difference: " + difference);

        }

        Files.deleteIfExists(new File(tmpFilePath).toPath());



    }
}
